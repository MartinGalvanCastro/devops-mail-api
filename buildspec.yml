version: 0.2

env:
  variables:
    ECR_REPO:      "devops/blacklist-api-python"
    SERVICE_NAME:  "Blacklist-API-fargate-service"
    DOCKER_TARGET: "aws_server"
    DOCKER_PLATFORM: "linux/amd64"
    UV_SYSTEM_PYTHON: true

phases:
  install:
    commands:
      - echo "Installing dev dependencies…"
      - pip install uv
      - uv sync --dev

  pre_build:
    commands:
      - echo "Running tests…"
      - uv run manage.py test-with-failures
      - echo "Retrieving AWS account ID…"
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - echo "Logging in to Amazon ECR…"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:
      - echo "Building Docker image ($DOCKER_TARGET)…"
      - docker build --platform $DOCKER_PLATFORM  --target $DOCKER_TARGET -t $ECR_REPO:latest .
      - echo "Tagging image for ECR…"
      - docker tag $ECR_REPO:latest $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:latest

  post_build:
    commands:
      - echo "Pushing image to ECR…"
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:latest
      - echo "Build complete on $(date)"
      - printf '{"ImageURI":"%s"}' "$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:latest" > imageDetail.json

artifacts:
  files:
    - appspec.yaml
    - taskdef.json
    - imageDetail.json